/**
 * 这里根Layout我使用它来充当入口文件，类型page router模式下的_app.tsx
 * app 目录必须包含根布局，也就是 app/layout.js 这个文件是必需的。
根布局必须包含 html 和 body标签，其他布局不能包含这些标签。如果你要更改这些标签，不推荐直接修改，参考《Metadata 篇》。
你可以使用路由组创建多个根布局。
默认根布局是服务端组件，且不能设置为客户端组件。
 */
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "@/styles/globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning={true}>
      {/* 关闭水合不一致警告 通过在 RootLayout 的起始<body>标记中将suppressHydrationWarning设置为true来抑制水合警告,我的浏览器控制程序会修改服务端渲染输出到页面的html，增加了一些额外属性的，导致服务端合客户端输出不一致的html从而会有警告，
      正确的处理是开发环境下禁用这些扩展程序。可以明确一点对生成环境不会有影响。 */}
      <body className={inter.className}>{children}</body>
    </html>
  );
}
